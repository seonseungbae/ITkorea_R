print('안녕하세요 R을 시작합니다')
# 주석 
# 주석은 프로그래밍에 있어서 '메모'하는 목적으로 사용

print('Hello World') # 단일주석

# ctrl + shhift + c  다중주석처리 
# 주석은 단순히 코드 설명만 하는게 아님.
# 작성자, 날짜, 수정이력 등 다양한 정보를 포함시킬 수 있음.
# 
# AUTHOR : 홍길동
# DATE : 2025-05-18
# Comment : 프로그램 테스트
# 실무에서는 작성자, 코드작성날짜를 상세히 입력
# why? 코드는 팀으로 프로젝트


# 출력하기
# 첫번째 방법 print
print('hello')

# 두번째 방법 cat
# cat 'contatenate'의 줄임말로 '연결하다', '이어 붙이다'라는 뜻
# 콤마를 기준으로 문자를 이어 붙인다.
cat('hello', 'world','\n')

# 자료형
# 우리가 사용하는 데이터는 문자 아니면 숫자임.
# ctrl+enter 코드한둘 실행
print(35) # 숫자형 데이터 출력

# R이 문자를 인식못한 것이 아니라 문자를 입력할 때 약속한 조건 미충족
# 문자를 입력할 때 작은따옴표 혹은 큰따옴표 사용
print('홍길동') # 문자형 데이터 출력

# 인간이 정보를 주고받을때 숫자와 문자로 충분하다.
# 그러나, 컴퓨터는 한가지 자료형을 더 필요로 함.
# 그 자료형을 '논리형'이라고 한다.
# 논리형은 TRUE 혹은 FALSE를 의미함. R은 소문자 인식 못함.

print(TRUE) #참
print(FALSE) # 거짓

# 범주형 데이터 타입
# 범주형? 항목으로 구분된 데이터 임.
# 수치적인 계산보다는 분류와 그룹화에 적합함.

# 범주형 데이터 타입 예시
# 1. 혈액형(A,B,O,A/B) 2.성별(남/녀)  3. 고객만족도(매우만족,만족,보통)
print(factor(c('A','B','O','A/B')))  # 범주형데이터 출력

# 특수데이터형(R에서 더 특히 중요함.)
# R에서 특수데이터형이란, 데이터분석과정에서 자주 마주치는 특별한
# 의미를 가진 값들을 의미함.

# 1. NA : 결측값(missing value), 데이터가 있어야 할 자리에 
# 값이빠져 있음을 의미합니다.

print(NA)

# 2. NULL : 비어있는 값(데이터 값 자체가 존재하지 않음을 의미)
# NULL은 Python이나 C 다른언어에서 중요함.
print(NULL) # NULL 출력

# 자료형(문자,숫자,논리형) 확인
# R에서 자료형을 확인할때는 typeof을 사용함.
# R에서 숫자를 기본적(디폴트)으로 실수로 인식합니다.
print(typeof(30))   # double(실수 : 소수점 3.14 이런것)
print(typeof(30L))   # integer(정수라는 뜻)
print(typeof('apple')) # character(문자)
print(typeof(TRUE)) # logical(논리)
print(typeof(NULL))  # NULL('값이없다')
print(typeof(NA))  # 결측값

# ****** 데이터타입 변환
# R에서 데이터 타입변환(형 변환)은 원하는 자료형으로 바꾸는 작업
# 실무에서 엄청많이 사용합니다.

print(as.character(123))  # 숫자를 문자로 변경 할때 어떻게 하는가?
print(as.numeric('123'))  # 문자를 숫자로 변경

# 문자에서 숫자로 변경할 때 주의점
print(as.numeric('123'))   # 경고메세지가 나옴.
# 문자열에 숫자만있는지 꼭 확인하자.(바로위 내용임.)

# 숫자에서 논리형으로 변경
# 컴퓨터는 0을 거짓(FALSE)으로 이해, 1(TRUE)을 참으로 이해합니다.
# 이것을 2진수라 한다.
print(as.logical(0))  # FALSE
print(as.logical(1))  # TRUE

# 변수
# 변수는 값이 변할수 있는 상자, 그 상자에는 '자료형'이 들어갑니다.

저금통 = 1000   # 저금통이라는 상자(변수)에 1000이라는 숫자형을 대입
print(저금통)

저금통2 = 2000
저금통2 = 5000
print(저금통2)  # 기존에 2000은 없어지고, 5000값이 출력

# '=' : 대입연산자라고 한다.
# 저금통 : '변수'

# 퀴즈
a = 'apple' # a라는 변수에 apple이;라는 문자형을 대입함.
print(a)  # apple 아니라 banana가 나올수 있게 만들어보세요

a = 'apple'
a = 'banana'  
print(a)
--------------------------------
# 연산자(+,-,*,/)
num = 3+2
print(num)
num = 5-2
print(num)
num = 3*2
print(num)
num = 10/2
print(num)
# ** 지수
num = 2**3
print(num)

# 비교연산자
print(5>2)  # 5는 2보다 크다, TRUE로 출력

print(3<2) #3은 2보다 작지않다. FALSE

print(5<=5) # 5는 5보다 크거나 같다, TRUE

print(3==3) # 3은 3과 같다. true

print(3!=2) #3과 2는 다르다. false

# 프로그래밍에서 느낌표기호는 '부정' 의미

# 논리연산자
print((3>2) & (5>4))  # AND연산자, 두조건 모두 참이면 참을 출력
print((3>2) | (5/4)) # | : OR 연산자,두 조건 중 하나만 참이면참출력
print(!(3>2))  # 느낌표(부정),FALSE가 출력됩니다.

# 퀴즈  해당 식을 R로 구현해보새요/

result = (50+30)/(10-2)*3

# 지금부터가 R의 핵심내용임.

# **** 벡터(Vector)
# 벡터는 여러개의 값을 한줄로 쭉 늘어 놓은 상자
# 동일한 데이터를 쭉 늘어 놓은 것(1차원 배열)

# 예) 친구 5명의 시험점수를 입력한다고 가정해보겠습니다.
# c() : Combind(결합된)약자
점수 = c(90,85,70,100,95)  # 벡터로 친구 5명의 점수를 한번에 담음
print(점수)

# 문자 벡터
색깔 = c('red','blue')
print(색깔)

# 백터에서 값 꺼내기
# 벡터에서 특정값을 꺼낼때 대괄호를 [] 사용합니다.
print(점수[2]) # 85 출력
# 여러값 꺼내기
print(점수[c(1,3,5)])  # 1번째, 3번째, 5번째 친구의 점수가 출력

# 연속된 숫자를 벡터로 만들어 보기
# 1부터 10까지 숫자를 벡터로 한번에 만들어보기
숫자=1:10  # 연속된 숫자를 생성할 땐 ':'기호사용
print(숫자)

# 벡터 형변환  *** 매우중요
숫자벡터 = c('1','3','5')  # 문자를 숫자로변경시 아래
숫자벡터 = as.numeric(c('1','2','3')) # 문자열 벡터를 숫자형 벡터로 변환
# 왜문자를 숫자로 변환
# 숫자로 변환해야 연산이 가능하기 때문

# 숫자를 문자로 형변환
문자열벡터 = c('1','2','100')
문자열벡터 = as.character(c(1,2,100)) # 숫자형 벡터를 문자형 벡터로 변환
print(문자열벡터)

# 벡터 연산
# 벡터는 수학적 연산이 가능하다.
x = c(2,4,6)
y = c(1,2,3)
z = x + y
print(z)   # 2+1, 4+2, 6+3 인 3 6 9가 나옴

-================= 1일차 오전 문제 5문제============
#1번 ~ 5번 문제풀리 공식
숫자벡터 = as.numeric(c('10','20','30'))
print(숫자벡터)

#2번문제
fruit_vec = c('apple','banana','orange')
print(fruit_vec[2])

3번
seq_vec = 1:5
print(seq_vec[c(1,3,5)])

#4번,
num_char = c('1','2','3')
num_char = as.numeric(c('1','2','3'))
print(num_char)

# 5
logic_vec = c(TRUE, FALSE, TRUE)
logic_vec = as.character(c(TRUE, FALSE, TRUE))
print(logic_vec)
          
===================================

# 벡터 조건문 ***중요함.  1일차 오후 수업
# 조건문 , 여기서 '문'은 문장을 의미한다.
# 조건이 들어있는 문장
# 특정조건이 만족하면 한가지 일을 하고, 아니면 다른 일을 하게하는명령어
# ~ 만약에 ~ 라면?
나이 = 25
if(나이 > 20){      # 나이가 20보다 크다면?
  print('구매가능')   # 조건이 만족하면 실행
}else{
  print('구매불가')  # 아니면 해당문장 실행
}

# R은 벡터와 조건문을 자주 사용합니다.
x = c(1,2,3,4,5)    # 1,2,3,4,5 를 벡터의 원소라 한다.
# 짝수만출력하고 싶다.
# 2, 4
# x %% == 0 : 벡터의 원소들을 2로 나누었을 떼 나머지가 0이라면
# %% : 나머지값 구하기
짝수 = ifelse(x %% 2 == 0, '짝수', '홀수')
print(짝수)    # "홀수", 짝 홀 짝 홀 순으로 나온다

점수 = c(80, 90, 100, 90, 70)
# 90점 이상인 학생은 A 아닌학생은 B
A학점 = ifelse(점수 >= 90, 'A','B')
print(A학점)
# & (and 연산자, 두조건을 만족해야 실행됨)
# 80점에서 90점사이인(범위) 학생은 A 아니면 B
A학점 = ifelse(점수 >= 80 & <= 90, 'A', 'B')
print(A학점)


# 1-2 연습문제
# 1부터 10까지의 정수 벡터 num_vec에서 각 값이 짝수면 "even", 홀수면 "odd"라는 문자 벡터를 만드세요.
num_vec = 1:10
결과 = ifelse(num_vec %% 2 == 0, 'even', 'odd')
print(결과)

# 점수 벡터 score_vec = c(85, 42, 77, 64, 58)에서 60점 이상은 "PASS", 미만은 "FAIL"로 표시하는 문자 벡터를 만드세요.
score_vec = c(85, 42, 77, 64, 58)
결과 = ifelse(score_vec >= 60, 'PASS', 'FAIL')
print(결과)

# 몸무게 벡터 weight = c(69, 50, 55, 71, 89, 64, 59, 70, 71, 80)에서 60~70kg 사이 값만 추출하여 새로운 벡터로 만드세요.
weight = c(69, 50, 55, 71, 89, 64, 59, 70, 71, 80)
결과 = weight[weight >= 60 & weight <= 70]
print(결과)

# 문자열 처리 *** 중요함.
# R에서 특정문자를 바꾸거나 잘라내기 기능이 필요할 때 사용

#1. substr : 특정위치의 부분 문자열을 추출
#2. strsplit : 특정 구분자를 기준으로 나누어 분리
#3. gsub : 다른 문자를 '대체'

# substr
text = '안녕하세요, 오늘은 R을 배워요.'
결과 = substr(text, 1, 5)  # 1번째 ~ 5번째까지만 조회
print(결과)
결과 = substr(text, 3, 6)  # 3번째 ~ 6번째까지만 조회
print(결과)

# strsplit
text = '홍길동@gmail.com'
결과 = strsplit(text, split = '@')
print(결과)   # @를 기준으로 문자를 나눈다.

# gsub
text = '고양이가 방에서 놀고 있어요'
결과 = gsub('고양이', '강아지', text)
print(결과)

text = '15000$'
# gsub으로 달러기호를 제거하고 제거한 문자를 숫자로 형변환
결과 = gsub('\\$','', text)   # 달러기호 제거 '\\$' 이렇게함. 빽슬러시임.(\)
print(as.numeric(결과))    # 문자에서 숫자로 형변환

============================================
(여기까지 이론교육이 끝난것임.)
=================================

같이 연습문제 오후 연습문제 풀이
# 학생 이름이 벡터로 주어졌습니다. 각 이름의 첫 글자만 뽑아서 새로운 벡터로 만들어 보세요.
# names = c("민수", "지영", "철수", "영희")
# 각 이름의 첫 글자만 추출하는 코드를 작성하세요.
names = c("민수", "지영", "철수", "영희")
결과 = substr(names,1,1)
print(결과)


# 휴대폰 번호 벡터가 있습니다. 각 번호에서 가운데 4자리만 추출해 벡터로 만드세요.
# phones = c("010-1234-5678", "010-9876-4321")
# 가운데 4자리(1234, 9876)만 추출하는 코드를 작성하세요.
phones = c("010-1234-5678", "010-9876-4321")
결과 = substr(phones,5,8)
print(결과)

# fruits = c("사과,바나나,포도", "딸기,수박")
# 쉼표(,)를 기준으로 과일 이름을 나누는 코드를 작성하세요.
fruits = c("사과,바나나,포도", "딸기,수박")
결과 = strsplit(fruits, split = ',')
print(결과)

#아래 벡터에서 모든 'a'를 'A'로 바꾼 새로운 벡터를 만드세요.
# words = c("apple", "banana", "grape")
# 모든 'a'를 'A'로 바꾸는 코드를 작성하세요.
words = c("apple", "banana", "grape")
결과 = gsub('a', 'A', words)
print(결과)

# 문장 벡터에서 마침표(.)를 공백(' ')으로 바꾸고, 다시 공백을 기준으로 단어별로 나누는 코드를 작성하세요.
# sentences = c("I like apple.", "You like banana.")
# 1. 마침표를 공백으로 바꾸고
# 2. 공백으로 단어를 나누세요.
sentences = c("I like apple.", "You like banana.")
#1. 마침표를 공백으로 바꾸고
결과 = gsub('\\.',' ',sentences) 
#2. 공백으로 단어를 나누세요
결과2 = strsplit(결과, split = ' ')
print(결과2)

====================================

#1. 벡터에서 두 번째 값을 출력하는 코드를 써 보세요.
colors = c("red", "green", "blue")
print(colors[2])

#2.벡터에서 1, 3번째 값을 한 번에 출력하는 코드를 써 보세요.
nums = c(10, 20, 30, 40)
print(nums[c(1,3)])

#3.벡터의 각 값이 50 이상이면 "PASS", 아니면 "FAIL"을 출력하는
#코드를 ifelse로 써 보세요.
scores = c(80, 45, 60, 30)
결과 = ifelse(scores >= 50, 'PASS','FAIL')
print(결과)

#4.벡터의 각 값이 "apple"이면 "과일", 아니면 "모름"을 출력하는
# 코드를 ifelse로 써 보세요.
items = c("apple", "car", "apple", "dog")
if('apple'){
  print('과일')
}else{
    print('모름')
  }

#5. 벡터의 각 값에서 첫 글자만 뽑아 새로운 벡터로 만들어 보세요.
# names = c("민수", "지영", "철수")

names = c("민수", "지영", "철수")
결과 = substr(names,1,1)
print(결과)

#6.벡터의 각 값에서 모든 "a"를 "A"로 바꾼 새로운 
# 벡터를 만들어 보세요words = c("apple", "banana", "grape")
words = c("apple", "banana", "grape")
결과 = gsub('a', 'A', words)
print(결과)

#7.쉼표(,)로 연결된 과일 이름 벡터를 과일별로 나누어 
리스트로 만들어 보세요.fruits = c("사과,바나나", "포도,딸기")
fruits = c("사과,바나나", "포도,딸기")
결과 = strsplit(fruits, split = ',')
print(결과)

#8.숫자 벡터를 문자 벡터로 바꾸는 코드를 써 보세요.
nums = c(1, 2, 3)
문자열벡터 = as.character(c(1,2,3))
print(문자열벡터)

#9.  문자 벡터를 숫자 벡터로 바꾸는 코드를 써 보세요.
# str_nums = c("10", "20", "30")
str_nums = c("10", "20", "30")
숫자열벡터 = as.numeric(c("10","20","30"))
print(숫자열벡터)

#10..문자 벡터를 숫자 벡터로 바꾸는 코드를 써 보세요.
price = c("15000$", "22000$", "18000$")
결과 = gsub('\\$.','',price)
print(as.numeric(결과))

# ********* 벡터 집계함수
# 엑셀에서 총합, 평균, 최댓값 등....
x = c(10,20,30,40,50)
# 최솟값구하기
최소값 = min(x)
print(최소값)
# 최대값구하기
최대값 = max(x)
print(최대값)
# 총합구하기
총합 = sum(x)
print(총합)
# 평균
평균 = mean(x)
print(평균)
#중앙값
#중앙값은 데이터의 크기순으로 정렬했을때 가장 가운데 위치한값
#데이터 개수가 짝수일 경우엔 값의 평균을 중앙값으로 사용함.
중앙값 = median(x)
print(중앙값)
#표준편차
#표준편차는 데이터가 평균으로 얼마나 퍼져있는지를 
#나타낸통계적지표
#예를들어, 학생 평균점수가 80점일때, 대부분의 학생이 78~82점
#사이이 있다면 표준편차는 적고, 하지만, 점수가 60 ~ 100점까지
# 다양하게 분포되어 있다면 표준편차는 크다.
# standard deviation 표준편차
표준편차 = sd(x)
print(표준편차)

# 벡터에 결측값(누락된 값)이 있을때
x=c(1, 2, NA, 4) # 결측치가 포함된 벡터
# 결측치가 포함된 데이터는 바로 계산했을때 NA가 나온다.
평균 = mean(x)
print(평균)

# 결측값을 처리한 후 계산해야 한다.
# 결측값 확인
data = c(1,2,NA,4,NA,6)
# is.na : 결측값이 존재하는지 판단하는 것이다.???
# is : na가 있니? 결과가 true 냐? 아니면 false냐?
print(is.na(data)) # NA가 있는 원소는 TRUE가 출력된다.

# 결측값 제거하기
#1. na.omit
#2. na.rm(remove)

결과 = na.omit(data)
print(결과)

data = c(1,2,NA,4,NA,6)
결과 = mean(data, na.rm = TRUE)
print(결과)

#퀴즈
#다음 벡터에서 결측치(NA)를 벡터의 중앙값으로 대체한
#벡터를 만들어 보세요.
x=c(NA, 20, 35, NA, 50, 10)
결과 = median(x, na.rm = TRUE)
print(결과)

# 벡터들의 집항 --> ****** 데이터프레임
# 데이터프래임을 잘 다루면 R은 50% 끝난것임.
# 데이터프래임을 행과 열로 구성된 표 형태의 데이터 구조임.
# 벡터 생성
ID = c(1,2,3)
Name = c('홍길동','박길동','최길동')
Age = c(25,30,35)
Salary = c(5000, 6000, 7000)

# 데이터프래임 생성
# 벡터들을 한번에 묶은게 데이터프래임(dataframe)
df = data.frame(ID,Name,Age,Salary)
print(df)
View(df)
======================
# 연습문제 4번 못푼문제......
items = c("apple", "car", "apple", "dog")
> ifelse(items == 'apple', '과일', '모름')
[1] "과일" "모름" "과일" "모름"
> 



